name: terraform-stg
on:
  pull_request:
    branches:
      - main
    paths:
      - 'terraform/stg/**'
  push:
    branches:
      - main
    paths:
      - 'terraform/stg/**'
env:
  TF_VERSION: 1.6.6
defaults:
  run:
    shell: bash
    working-directory: terraform/stg
jobs:
  terraform-ci:
    if: github.event_name == 'pull_request'
    environment: stg
    runs-on: ubuntu-latest
    permissions:
      contents: read
      id-token: write
      pull-requests: write
    steps:
      - uses: actions/checkout@v4
      - uses: google-github-actions/auth@v2
        with:
          workload_identity_provider: ${{ vars.GCP_WIF_PROVIDER }}
          service_account: ${{ vars.GCP_WIF_SERVICE_ACCOUNT }}
      - uses: hashicorp/setup-terraform@v2
        with:
          terraform_version: ${{ env.TF_VERSION }}
      - name: terraform init
        run: |
          terraform init -backend-config="bucket=${{ vars.TF_BACKEND_BUCKET }}"
      - name: terraform fmt
        run: |
          terraform fmt -check -recursive
      # tflint
      # https://github.com/terraform-linters/setup-tflint
      - uses: terraform-linters/setup-tflint@v3
      - run: tflint --init
        env:
          GITHUB_TOKEN: ${{ github.token }}
      - run: tflint -f compact
      # tfsec
      # https://github.com/aquasecurity/tfsec-pr-commenter-action
      - uses: aquasecurity/tfsec-pr-commenter-action@v1.2.0
        with:
          github_token: ${{ github.token }}
          # https://github.com/aquasecurity/tfsec-pr-commenter-action/issues/90
          working_directory: ''
  terraform-plan:
    if: github.event_name == 'pull_request'
    environment: stg
    runs-on: ubuntu-latest
    permissions:
      contents: read
      id-token: write
      pull-requests: write
    steps:
      - uses: actions/checkout@v4
      - uses: google-github-actions/auth@v2
        with:
          workload_identity_provider: ${{ vars.GCP_WIF_PROVIDER }}
          service_account: ${{ vars.GCP_WIF_SERVICE_ACCOUNT }}
      - uses: hashicorp/setup-terraform@v2
        with:
          terraform_version: ${{ env.TF_VERSION }}
      - name: terraform init
        run: |
          terraform init -backend-config="bucket=${{ vars.TF_BACKEND_BUCKET }}"
      - name: setup tfcmt
        run: |
          wget "https://github.com/suzuki-shunsuke/tfcmt/releases/download/v4.8.0/tfcmt_linux_amd64.tar.gz" -O /tmp/tfcmt.tar.gz
          tar xzf /tmp/tfcmt.tar.gz -C /tmp
          mv /tmp/tfcmt /usr/local/bin
      - name: terraform plan
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |-
          tfcmt plan -- terraform plan -no-color
  terraform-apply:
    if: github.event_name == 'push'
    environment: stg
    runs-on: ubuntu-latest
    permissions:
      contents: read
      id-token: write
      pull-requests: write
    defaults:
      run:
        working-directory: terraform/stg
    steps:
      - uses: actions/checkout@v4
      - uses: google-github-actions/auth@v2
        with:
          workload_identity_provider: ${{ vars.GCP_WIF_PROVIDER }}
          service_account: ${{ vars.GCP_WIF_SERVICE_ACCOUNT }}
      - uses: hashicorp/setup-terraform@v2
        with:
          terraform_version: ${{ env.TF_VERSION }}
      - name: terraform init
        run: |
          terraform init -backend-config="bucket=${{ vars.TF_BACKEND_BUCKET }}"
      - name: setup tfcmt
        run: |
          wget "https://github.com/suzuki-shunsuke/tfcmt/releases/download/v4.8.0/tfcmt_linux_amd64.tar.gz" -O /tmp/tfcmt.tar.gz
          tar xzf /tmp/tfcmt.tar.gz -C /tmp
          mv /tmp/tfcmt /usr/local/bin
      - name: terraform apply
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |-
          tfcmt apply -- terraform apply -auto-approve -no-color
